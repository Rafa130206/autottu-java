create table AUT_T_USUARIO (
    id_usuario integer generated by default as identity primary key,
    nome varchar(255) not null,
    email varchar(255) not null,
    telefone varchar(255),
    username varchar(100) not null unique,
    senha varchar(255) not null,
    perfil varchar(20) not null
);

create table AUT_T_MOTO (
    id_moto integer generated by default as identity primary key,
    placa varchar(7) not null unique,
    modelo varchar(100) not null,
    marca varchar(100) not null,
    status varchar(20) not null,
    url_foto varchar(255)
);

create table AUT_T_SLOT (
    id_slot integer generated by default as identity primary key,
    ocupado char(1) default 'N',
    AUT_T_MOTO_id_moto integer,
    constraint UK_slot_moto unique (AUT_T_MOTO_id_moto),
    constraint CK_slot_ocupado check (ocupado in ('S','N')),
    constraint FK_slot_moto foreign key (AUT_T_MOTO_id_moto) references AUT_T_MOTO(id_moto)
);

create table AUT_T_CHECKIN (
    id_checkin integer generated by default as identity primary key,
    violada char(1),
    observacao varchar(255),
    timestamp timestamp,
    imagens varchar(500),
    AUT_T_MOTO_id_moto integer,
    AUT_T_USUARIO_id_usuario integer,
    AUT_T_SLOT_id_slot integer,
    constraint CK_checkin_violada check (violada in ('S','N')),
    constraint FK_checkin_moto foreign key (AUT_T_MOTO_id_moto) references AUT_T_MOTO(id_moto),
    constraint FK_checkin_usuario foreign key (AUT_T_USUARIO_id_usuario) references AUT_T_USUARIO(id_usuario),
    constraint FK_checkin_slot foreign key (AUT_T_SLOT_id_slot) references AUT_T_SLOT(id_slot)
);

create table AUT_T_MANUTENCAO (
    id_manutencao integer generated by default as identity primary key,
    AUT_T_MOTO_id_moto integer not null,
    km_atual integer not null,
    data_agendada date not null,
    proxima_revisao_km integer,
    proxima_revisao_data date,
    observacoes varchar(500),
    status varchar(20),
    constraint FK_manutencao_moto foreign key (AUT_T_MOTO_id_moto) references AUT_T_MOTO(id_moto)
);

create table AUT_T_TEST_RIDE (
    id_test_ride integer generated by default as identity primary key,
    AUT_T_MOTO_id_moto integer not null,
    AUT_T_USUARIO_id_usuario integer not null,
    proposito varchar(255) not null,
    data_desejada date not null,
    data_limite date,
    status varchar(20) not null,
    observacoes varchar(500),
    constraint FK_testride_moto foreign key (AUT_T_MOTO_id_moto) references AUT_T_MOTO(id_moto),
    constraint FK_testride_usuario foreign key (AUT_T_USUARIO_id_usuario) references AUT_T_USUARIO(id_usuario)
);

create index IDX_slot_moto on AUT_T_SLOT(AUT_T_MOTO_id_moto);
create index IDX_checkin_moto_data on AUT_T_CHECKIN(AUT_T_MOTO_id_moto, timestamp);
create index IDX_manutencao_moto_data on AUT_T_MANUTENCAO(AUT_T_MOTO_id_moto, data_agendada);
create index IDX_testride_moto_data on AUT_T_TEST_RIDE(AUT_T_MOTO_id_moto, data_desejada);
